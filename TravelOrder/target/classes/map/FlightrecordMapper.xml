<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="travel.map.FlightrecordMapper" >
  <resultMap id="BaseResultMap" type="travel.bean.Flightrecord" >    
    <id column="id" property="Id" jdbcType="INTEGER" />
    <result column="status_name" property="status" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <!-- record持有一个flight -->
    <result column="flight_id" property="flight.flightId" jdbcType="INTEGER" />
    <result column="flight_num" property="flight.flightNum" jdbcType="VARCHAR" />
    <result column="price" property="flight.price" jdbcType="REAL" />
    <result column="seat_num" property="flight.seatNum" jdbcType="INTEGER" />
    <result column="avail_num" property="flight.availNum" jdbcType="INTEGER" />
    <result column="from_city" property="flight.fromCity" jdbcType="VARCHAR" />
    <result column="ariv_city" property="flight.arivCity" jdbcType="VARCHAR" />
    <result column="start_date" property="flight.startDate" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    start_date,id,flight_id,flight_num,price,seat_num,avail_num,from_city,ariv_city,status_name,update_date
  </sql>
  <!-- 通过用户id查询该用户预约的航班记录 -->
  <select id="selectFlightRecordByCustId" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
  	from 
  	(select * from flightrecord where cust_id=#{custId}) r 
  	NATURAL join flights 
  	NATURAL join recordstatus
  	ORDER BY update_date desc
  </select>
  
  <!-- 通过用户id查询该用户预约的已出行航班记录 -->
  <select id="selectPathRecordByCustId" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" />
  	from 
  	(select * from flightrecord where cust_id=#{custId} and status_id=1) r 
  	NATURAL join flights 
  	NATURAL join recordstatus  	
  	ORDER BY update_date desc
  </select>
  
  <update id="updateFlightStatusByRecordId" statementType="CALLABLE">
  	{
  		call FLIGHT_CANCEL(#{id,mode=IN},#{flight_id,mode=IN})
  	}
  </update>
</mapper>